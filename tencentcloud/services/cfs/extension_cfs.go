package cfs

const (
	CFS_PROTOCOL_NFS   = "NFS"
	CFS_PROTOCOL_CIFS  = "CIFS"
	CFS_PROTOCOL_TURBO = "TURBO"

	CFS_STORAGETYPE_SD = "SD"
	CFS_STORAGETYPE_HP = "HP"
	CFS_STORAGETYPE_TB = "TB"
	CFS_STORAGETYPE_TP = "TP"

	CFS_NET_VPC = "VPC"
	CFS_NET_CCN = "CCN"

	CFS_FILE_SYSTEM_STATUS_CREATING = "creating"
	CFS_FILE_SYSTEM_STATUS_SUCCESS  = "available"
	CFS_FILE_SYSTEM_STATUS_FAILED   = "create_failed"

	CFS_RW_PERMISSION_RO = "RO"
	CFS_RW_PERMISSION_RW = "RW"

	CFS_USER_PERMISSION_ALL_SQUASH     = "all_squash"
	CFS_USER_PERMISSION_NO_ALL_SQUASH  = "no_all_squash"
	CFS_USER_PERMISSION_ROOT_SQUASH    = "root_squash"
	CFS_USER_PERMISSION_NO_ROOT_SQUASH = "no_root_squash"

	FAILED_OPERATION_PGROUP_IS_UPDATING_ERROR = "FailedOperation.PgroupIsUpdating"
)

var CFS_STORAGETYPE = []string{
	CFS_STORAGETYPE_SD,
	CFS_STORAGETYPE_HP,
	CFS_STORAGETYPE_TB,
	CFS_STORAGETYPE_TP,
}

var CFS_PROTOCOL = []string{
	CFS_PROTOCOL_NFS,
	CFS_PROTOCOL_CIFS,
	CFS_PROTOCOL_TURBO,
}

var CFS_NET = []string{
	CFS_NET_VPC,
	CFS_NET_CCN,
}

var CFS_RW_PERMISSION = []string{
	CFS_RW_PERMISSION_RO,
	CFS_RW_PERMISSION_RW,
}

var CFS_USER_PERMISSION = []string{
	CFS_USER_PERMISSION_ALL_SQUASH,
	CFS_USER_PERMISSION_NO_ALL_SQUASH,
	CFS_USER_PERMISSION_ROOT_SQUASH,
	CFS_USER_PERMISSION_NO_ROOT_SQUASH,
}

const CfsInvalidPgroup = "InvalidParameterValue.InvalidPgroup"
