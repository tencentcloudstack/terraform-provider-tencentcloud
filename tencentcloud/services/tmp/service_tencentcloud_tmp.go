// Code generated by iacg; DO NOT EDIT.
package tmp

import (
	"context"
	"log"

	monitorv20180724 "github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/monitor/v20180724"

	tccommon "github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/common"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/connectivity"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/internal/helper"
	"github.com/tencentcloudstack/terraform-provider-tencentcloud/tencentcloud/ratelimit"
)

func NewMonitorService(client *connectivity.TencentCloudClient) MonitorService {
	return MonitorService{client: client}
}

type MonitorService struct {
	client *connectivity.TencentCloudClient
}

func (me *MonitorService) DescribeMonitorTmpMultipleWritesListById(ctx context.Context, instanceId string) (ret *monitorv20180724.DescribeRemoteURLsResponseParams, errRet error) {
	logId := tccommon.GetLogId(ctx)

	request := monitorv20180724.NewDescribeRemoteURLsRequest()
	request.InstanceId = helper.String(instanceId)

	defer func() {
		if errRet != nil {
			log.Printf("[CRITAL]%s api[%s] fail, request body [%s], reason[%s]\n", logId, request.GetAction(), request.ToJsonString(), errRet.Error())
		}
	}()

	ratelimit.Check(request.GetAction())

	response, err := me.client.UseMonitorV20180724Client().DescribeRemoteURLs(request)
	if err != nil {
		errRet = err
		return
	}
	log.Printf("[DEBUG]%s api[%s] success, request body [%s], response body [%s]\n", logId, request.GetAction(), request.ToJsonString(), response.ToJsonString())

	ret = response.Response
	return
}
