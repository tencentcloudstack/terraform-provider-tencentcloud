package clb

const (
	CLB_NETWORK_TYPE_OPEN     = "OPEN"
	CLB_NETWORK_TYPE_INTERNAL = "INTERNAL"
)

var CLB_NETWORK_TYPE = []string{
	CLB_NETWORK_TYPE_OPEN,
	CLB_NETWORK_TYPE_INTERNAL,
}

const (
	CLB_LISTENER_PROTOCOL_TCP    = "TCP"
	CLB_LISTENER_PROTOCOL_UDP    = "UDP"
	CLB_LISTENER_PROTOCOL_HTTP   = "HTTP"
	CLB_LISTENER_PROTOCOL_HTTPS  = "HTTPS"
	CLB_LISTENER_PROTOCOL_TCPSSL = "TCP_SSL"
	CLB_LISTENER_PROTOCOL_QUIC   = "QUIC"
)

var CLB_LISTENER_PROTOCOL = []string{
	CLB_LISTENER_PROTOCOL_TCP,
	CLB_LISTENER_PROTOCOL_UDP,
	CLB_LISTENER_PROTOCOL_HTTP,
	CLB_LISTENER_PROTOCOL_HTTPS,
	CLB_LISTENER_PROTOCOL_TCPSSL,
	CLB_LISTENER_PROTOCOL_QUIC,
}

const (
	CLB_HTTP_METHOD_GET  = "GET"
	CLB_HTTP_METHOD_HEAD = "HEAD"
)

var CLB_HTTP_METHOD = []string{
	CLB_HTTP_METHOD_GET,
	CLB_HTTP_METHOD_HEAD,
}

const (
	CLB_LISTENER_SCHEDULER_WRR       = "WRR"
	CLB_LISTENER_SCHEDULER_LEASTCONN = "LEAST_CONN"
	CLB_LISTENER_SCHEDULER_IP_HASH   = "IP_HASH"
)

var CLB_LISTENER_SCHEDULER = []string{
	CLB_LISTENER_SCHEDULER_WRR,
	CLB_LISTENER_SCHEDULER_LEASTCONN,
	CLB_LISTENER_SCHEDULER_IP_HASH,
}

const (
	HTTP_VERSION_ONE_ZERO = "HTTP/1.0"
	HTTP_VERSION_ONE_ONE  = "HTTP/1.1"
)

var HTTP_VERSION = []string{
	HTTP_VERSION_ONE_ZERO,
	HTTP_VERSION_ONE_ONE,
}

const (
	HEALTH_CHECK_TYPE_CUSTOM = "CUSTOM"
	HEALTH_CHECK_TYPE_PING   = "PING"
	HEALTH_CHECK_TYPE_TCP    = "TCP"
	HEALTH_CHECK_TYPE_HTTP   = "HTTP"
	HEALTH_CHECK_TYPE_HTTPS  = "HTTPS"
	HEALTH_CHECK_TYPE_GRPC   = "GRPC"
	HEALTH_CHECK_TYPE_GRPCS  = "GRPCS"
)

var HEALTH_CHECK_TYPE = []string{
	HEALTH_CHECK_TYPE_CUSTOM,
	HEALTH_CHECK_TYPE_PING,
	HEALTH_CHECK_TYPE_TCP,
	HEALTH_CHECK_TYPE_HTTP,
	HEALTH_CHECK_TYPE_HTTPS,
	HEALTH_CHECK_TYPE_GRPC,
	HEALTH_CHECK_TYPE_GRPCS,
}

const (
	CONTEX_TYPE_HEX  = "HEX"
	CONTEX_TYPE_TEXT = "TEXT"
)

var CONTEX_TYPE = []string{
	CONTEX_TYPE_HEX,
	CONTEX_TYPE_TEXT,
}

const (
	CERT_SSL_MODE_UNI = "UNIDIRECTIONAL"
	CERT_SSL_MODE_MUT = "MUTUAL"
)

var CERT_SSL_MODE = []string{
	CERT_SSL_MODE_UNI,
	CERT_SSL_MODE_MUT,
}

const (
	FORWARD_TYPE_HTTP = "HTTP"
)

var FORWARD_TYPE = []string{
	FORWARD_TYPE_HTTP,
}

const (
	CLB_TASK_SUCCESS   = 0
	CLB_TASK_FAIL      = 1
	CLB_TASK_EXPANDING = 2
)

const (
	HEALTH_APPLY_TYPE_LISTENER = "listener"
	HEALTH_APPLY_TYPE_RULE     = "rule"
)

const (
	AUTO_TARGET_PORT = 443
	AUTO_SOURCE_PORT = 80
)

const (
	CLB_PAGE_LIMIT = 100
)

const (
	CLB_TARGET_TYPE_NODE        = "NODE"
	CLB_TARGET_TYPE_TARGETGROUP = "TARGETGROUP"
)

const (
	CLB_BACKEND_TYPE_CVM  = "CVM"
	CLB_BACKEND_TYPE_ENI  = "ENI"
	CLB_BACKEND_TYPE_NAT  = "NAT"
	CLB_BACKEND_TYPE_CCN  = "CCN"
	CLB_BACKEND_TYPE_SRV  = "SRV"
	CLB_BACKEND_TYPE_MS   = "MANAGED_SERVICE"
	CLB_BACKEND_TYPE_EVM  = "EVM"
	CLB_BACKEND_TYPE_GR   = "GLOBALROUTE"
	CLB_BACKEND_TYPE_IPDC = "IPDC"
	CLB_BACKEND_TYPE_PVGW = "PVGW"
)

const (
	CLB_SESSION_TYPE_NORMAL = "NORMAL"
	CLB_SESSION_TYPE_QUIC   = "QUIC_CID"
)
